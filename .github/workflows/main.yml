name: CI

on:
  pull_request:
    branches:
      - master

  push:
    branches:
      - master

jobs:
  build-and-test:
    name: Build package and run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v1
        with:
          python-version: '3.7'
          architecture: 'x64'

      - name: Install poetry
        uses: snok/install-poetry@v1.1.6
        with:
          virtualenvs-create: true
          virtualenvs-in-project: false
          virtualenvs-path: ~/.local/share/poetry-virtualenvs
          version: 1.1.11

      - name: Capture poetry version
        run: echo "::set-output name=poetry-version::$(poetry --version | sed 's/[()]//g')"
        id: poetry-version

      - name: Cache Poetry environment
        uses: actions/cache@v2
        id: poetry-cache
        with:
          path: ~/.local/share/poetry-virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('tinker-engine/poetry.lock') }}-${{ steps.poetry-version.outputs.poetry-version }}-${{ secrets.CACHE_VERSION }}

      - name: Install Using Poetry
        if: steps.poetry-cache.outputs.cache-hit != 'true'
        run: poetry install --no-interaction -vvv

      - name: Install Pip dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pipenv install --dev --deploy

      - name: Run linting
        run: poetry run flake8

      - name: Black formatting test
        run: poetry run black .

      - name: Run typechecking
        run: poetry run mypy -p tinker --disallow-untyped-defs

      - name: Test suite
        run: poetry run pytest test/
